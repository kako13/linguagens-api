{
  "unversionedId": "petstore/place-order",
  "id": "petstore/place-order",
  "title": "Place an order for a pet",
  "description": "",
  "source": "@site/docs/petstore/place-order.api.mdx",
  "sourceDirName": "petstore",
  "slug": "/petstore/place-order",
  "permalink": "/docs/petstore/place-order",
  "draft": false,
  "editUrl": null,
  "tags": [],
  "version": "current",
  "frontMatter": {
    "id": "place-order",
    "title": "Place an order for a pet",
    "description": "",
    "sidebar_label": "Place an order for a pet",
    "hide_title": true,
    "hide_table_of_contents": true,
    "api": {
      "tags": [
        "store"
      ],
      "description": "",
      "operationId": "placeOrder",
      "responses": {
        "200": {
          "description": "successful operation",
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Order ID",
                    "allOf": [
                      {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "title": "Id"
                      }
                    ]
                  },
                  "petId": {
                    "description": "Pet ID",
                    "allOf": [
                      {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "title": "Id"
                      }
                    ]
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "default": 1
                  },
                  "shipDate": {
                    "description": "Estimated ship date",
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered"
                    ]
                  },
                  "complete": {
                    "description": "Indicates whenever order was completed or not",
                    "type": "boolean",
                    "default": false,
                    "readOnly": true
                  },
                  "requestId": {
                    "description": "Unique Request Id",
                    "type": "string",
                    "writeOnly": true
                  }
                },
                "xml": {
                  "name": "Order"
                },
                "title": "Order"
              }
            },
            "application/xml": {
              "schema": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "Order ID",
                    "allOf": [
                      {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "title": "Id"
                      }
                    ]
                  },
                  "petId": {
                    "description": "Pet ID",
                    "allOf": [
                      {
                        "type": "integer",
                        "format": "int64",
                        "readOnly": true,
                        "title": "Id"
                      }
                    ]
                  },
                  "quantity": {
                    "type": "integer",
                    "format": "int32",
                    "minimum": 1,
                    "default": 1
                  },
                  "shipDate": {
                    "description": "Estimated ship date",
                    "type": "string",
                    "format": "date-time"
                  },
                  "status": {
                    "type": "string",
                    "description": "Order Status",
                    "enum": [
                      "placed",
                      "approved",
                      "delivered"
                    ]
                  },
                  "complete": {
                    "description": "Indicates whenever order was completed or not",
                    "type": "boolean",
                    "default": false,
                    "readOnly": true
                  },
                  "requestId": {
                    "description": "Unique Request Id",
                    "type": "string",
                    "writeOnly": true
                  }
                },
                "xml": {
                  "name": "Order"
                },
                "title": "Order"
              }
            }
          }
        },
        "400": {
          "description": "Invalid Order",
          "content": {
            "application/json": {
              "example": {
                "status": 400,
                "message": "Invalid Order"
              }
            }
          }
        }
      },
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "id": {
                  "description": "Order ID",
                  "allOf": [
                    {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "title": "Id"
                    }
                  ]
                },
                "petId": {
                  "description": "Pet ID",
                  "allOf": [
                    {
                      "type": "integer",
                      "format": "int64",
                      "readOnly": true,
                      "title": "Id"
                    }
                  ]
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32",
                  "minimum": 1,
                  "default": 1
                },
                "shipDate": {
                  "description": "Estimated ship date",
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "type": "string",
                  "description": "Order Status",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered"
                  ]
                },
                "complete": {
                  "description": "Indicates whenever order was completed or not",
                  "type": "boolean",
                  "default": false,
                  "readOnly": true
                },
                "requestId": {
                  "description": "Unique Request Id",
                  "type": "string",
                  "writeOnly": true
                }
              },
              "xml": {
                "name": "Order"
              },
              "title": "Order"
            }
          }
        },
        "description": "order placed for purchasing the pet",
        "required": true
      },
      "method": "post",
      "path": "/store/order",
      "servers": [
        {
          "url": "https://petstore.swagger.io/v2",
          "description": "Default server"
        },
        {
          "url": "https://petstore.swagger.io/sandbox",
          "description": "Sandbox server"
        }
      ],
      "securitySchemes": {
        "petstore_auth": {
          "description": "Get access to data while protecting your account credentials.\nOAuth2 is also a safer and more secure way to give you access.\n",
          "type": "oauth2",
          "flows": {
            "implicit": {
              "authorizationUrl": "http://petstore.swagger.io/api/oauth/dialog",
              "scopes": {
                "write:pets": "modify pets in your account",
                "read:pets": "read your pets"
              }
            }
          }
        },
        "api_key": {
          "description": "For this sample, you can use the api key `special-key` to test the authorization filters.\n",
          "type": "apiKey",
          "name": "api_key",
          "in": "header"
        }
      },
      "jsonRequestBodyExample": {
        "quantity": 1,
        "shipDate": "2023-03-24T14:15:56.763Z",
        "status": "placed",
        "requestId": "string"
      },
      "info": {
        "description": "This is a sample server Petstore server.\nYou can find out more about Swagger at\n[http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).\nFor this sample, you can use the api key `special-key` to test the authorization filters.\n\n## Introduction\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## OpenAPI Specification\nThis API is documented in **OpenAPI format** and is based on\n[Petstore sample](http://petstore.swagger.io/) provided by [swagger.io](http://swagger.io) team.\nIt was **extended** to illustrate features of [generator-openapi-repo](https://github.com/Rebilly/generator-openapi-repo)\ntool and [ReDoc](https://github.com/Redocly/redoc) documentation. In addition to standard\nOpenAPI syntax we use a few [vendor extensions](https://github.com/Redocly/redoc/blob/master/docs/redoc-vendor-extensions.md).\n\n## Cross-Origin Resource Sharing\nThis API features Cross-Origin Resource Sharing (CORS) implemented in compliance with  [W3C spec](https://www.w3.org/TR/cors/).\nAnd that allows cross-domain communication from the browser.\nAll responses have a wildcard same-origin which makes them completely public and accessible to everyone, including any code on any site.\n\n## Authentication\n\nPetstore offers two forms of authentication:\n  - API Key\n  - OAuth2\nOAuth2 - an open protocol to allow secure authorization in a simple\nand standard method from web, mobile and desktop applications.\n",
        "version": "2.0.0",
        "title": "Swagger Petstore YAML",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
          "name": "API Support",
          "email": "apiteam@swagger.io",
          "url": "https://github.com/Redocly/redoc"
        },
        "x-logo": {
          "url": "https://redocly.github.io/redoc/petstore-logo.png",
          "altText": "Petstore logo"
        },
        "license": {
          "name": "Apache 2.0",
          "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        }
      },
      "postman": {
        "name": "Place an order for a pet",
        "description": {
          "content": "",
          "type": "text/plain"
        },
        "url": {
          "path": [
            "store",
            "order"
          ],
          "host": [
            "{{baseUrl}}"
          ],
          "query": [],
          "variable": []
        },
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Accept",
            "value": "application/json"
          }
        ],
        "method": "POST",
        "body": {
          "mode": "raw",
          "raw": "\"\"",
          "options": {
            "raw": {
              "language": "json"
            }
          }
        }
      }
    },
    "sidebar_class_name": "post api-method",
    "info_path": "docs/petstore/swagger-petstore-yaml",
    "custom_edit_url": null
  },
  "sidebar": "tutorialSidebar",
  "previous": {
    "title": "Pets",
    "permalink": "/docs/petstore/pet"
  },
  "next": {
    "title": "Petstore Orders",
    "permalink": "/docs/petstore/store"
  }
}